name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Publish to NPM
        run: |
          echo "Publishing packages to NPM..."
          pnpm changeset publish --no-git-tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release Notes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            
            if (releases.length > 0) {
              const latestRelease = releases[0];
              console.log(`Latest release: ${latestRelease.tag_name}`);
              
              // Add badges and links to release notes
              const additionalNotes = `
              
              ## ðŸ“¦ Installation
              
              \`\`\`bash
              npm install @open-socket/core
              # or
              pnpm add @open-socket/core
              # or
              yarn add @open-socket/core
              \`\`\`
              
              ## ðŸ“š Documentation
              
              - [Getting Started](https://docs.opensocket.dev/getting-started)
              - [API Reference](https://docs.opensocket.dev/api)
              - [Provider Guides](https://docs.opensocket.dev/providers)
              
              ## ðŸ”— Links
              
              - [NPM Package](https://www.npmjs.com/package/@open-socket/core)
              - [GitHub Repository](https://github.com/open-socket/opensocket-js)
              - [Changelog](https://github.com/open-socket/opensocket-js/blob/main/CHANGELOG.md)
              `;
              
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: latestRelease.id,
                body: latestRelease.body + additionalNotes
              });
            }